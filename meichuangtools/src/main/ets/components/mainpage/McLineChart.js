import DrawLine from"../../utils/drawLine";import{Tooltip}from"./Tooltip";const drawMcLineChart=new DrawLine;export class McLineChart extends ViewPU{constructor(t,o,e,i=-1){super(t,e,i);this.settings=new RenderingContextSettings(!0);this.context=new CanvasRenderingContext2D(this.settings);this.__options=new ObservedPropertyObjectPU({},this,"options");this.__isTooltipShow=new ObservedPropertySimplePU(!1,this,"isTooltipShow");this.__tooltipInfo=new ObservedPropertyObjectPU({},this,"tooltipInfo");this.setInitiallyProvidedValue(o)}setInitiallyProvidedValue(t){void 0!==t.settings&&(this.settings=t.settings);void 0!==t.context&&(this.context=t.context);void 0!==t.options&&(this.options=t.options);void 0!==t.isTooltipShow&&(this.isTooltipShow=t.isTooltipShow);void 0!==t.tooltipInfo&&(this.tooltipInfo=t.tooltipInfo)}updateStateVars(t){}purgeVariableDependenciesOnElmtId(t){this.__options.purgeDependencyOnElmtId(t);this.__isTooltipShow.purgeDependencyOnElmtId(t);this.__tooltipInfo.purgeDependencyOnElmtId(t)}aboutToBeDeleted(){this.__options.aboutToBeDeleted();this.__isTooltipShow.aboutToBeDeleted();this.__tooltipInfo.aboutToBeDeleted();SubscriberManager.Get().delete(this.id__());this.aboutToBeDeletedInternal()}get options(){return this.__options.get()}set options(t){this.__options.set(t)}get isTooltipShow(){return this.__isTooltipShow.get()}set isTooltipShow(t){this.__isTooltipShow.set(t)}get tooltipInfo(){return this.__tooltipInfo.get()}set tooltipInfo(t){this.__tooltipInfo.set(t)}showInfo(t,o,e,i,s){this.isTooltipShow=t;this.isTooltipShow&&(this.tooltipInfo=Object.assign(Object.assign({},s),{pos:o,title:e,data:i}))}aboutToAppear(){}initialRender(){this.observeComponentCreation(((t,o)=>{ViewStackProcessor.StartGetAccessRecordingFor(t);Column.create();Column.width("100%");Column.height("100%");o||Column.pop();ViewStackProcessor.StopGetAccessRecording()}));this.observeComponentCreation(((t,o)=>{ViewStackProcessor.StartGetAccessRecordingFor(t);Canvas.create(this.context);Canvas.width("100%");Canvas.height("100%");Canvas.onReady((()=>{drawMcLineChart.init(this.context,ObservedObject.GetRawObject(this.options))}));Gesture.create(GesturePriority.Low);TapGesture.create({count:1});TapGesture.onAction((t=>{drawMcLineChart.bindEvent(t,this.showInfo.bind(this))}));TapGesture.pop();Gesture.pop();o||Canvas.pop();ViewStackProcessor.StopGetAccessRecording()}));Canvas.pop();this.observeComponentCreation(((t,o)=>{ViewStackProcessor.StartGetAccessRecordingFor(t);If.create();this.isTooltipShow?this.ifElseBranchUpdateFunction(0,(()=>{this.observeComponentCreation(((t,o)=>{ViewStackProcessor.StartGetAccessRecordingFor(t);o?ViewPU.create(new Tooltip(this,{tooltipInfo:this.__tooltipInfo},void 0,t)):this.updateStateVarsOfChildByElmtId(t,{});ViewStackProcessor.StopGetAccessRecording()}))})):If.branchId(1);o||If.pop();ViewStackProcessor.StopGetAccessRecording()}));If.pop();Column.pop()}rerender(){this.updateDirtyElements()}}